apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stack-app.fullname" . }}
  namespace: {{ .Values.ns }}
  labels:
    {{- include "stack-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "stack-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "stack-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["uvicorn"]
          args: ["app.main:app", "--host", "0.0.0.0"]
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "stack-app.fullname" . }}-config
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.credentialsSecret | default "postgres-credentials" }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.credentialsSecret | default "postgres-credentials" }}
                  key: password
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 65
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 70
            periodSeconds: 20
